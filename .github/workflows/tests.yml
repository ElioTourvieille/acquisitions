name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://test:test@localhost:5432/acquisitions_test' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        continue-on-error: true
        id: tests

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results 🧪" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.tests.outcome }}" == "success" ]; then
            echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some tests failed. Please review the logs above.**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Coverage Report" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "coverage/lcov-report/index.html" ]; then
            echo "📊 Coverage reports have been generated and uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
            echo "Download the artifacts to view detailed coverage information." >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ No coverage report found." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Artifacts:** Coverage reports are available for 30 days." >> $GITHUB_STEP_SUMMARY

      - name: Annotate test failures
        if: steps.tests.outcome == 'failure'
        run: |
          echo "::error title=Test Failures::One or more tests failed. Please review the test output above and fix the failing tests."
          exit 1

      - name: Check overall test status
        if: steps.tests.outcome == 'failure'
        run: |
          echo "::error title=Test Suite Failed::The test suite failed. Please fix all failing tests before merging."
          exit 1